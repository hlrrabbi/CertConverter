package pki.certconverter;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JFileChooser;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.NoSuchProviderException;
import java.security.Security;
import java.security.cert.*;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author hlrrabbi
 */
public class Pem_DerToPkcs7 extends javax.swing.JFrame  {

    /**
     * Creates new form Pem_DerToPkcs7
     */
    public Pem_DerToPkcs7() {
        initComponents();
        Image icon = Toolkit.getDefaultToolkit().getImage("logo_certconvert.png");
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Convert Pem or Der to PKCS#7");
        setLocation(new java.awt.Point(500, 125));

        jLabel1.setText("Conversion d'un certificat au format PEM ou DER EN PKCS#7");

        jButton1.setText("Choisir un fichier");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Choisir un fichier");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Enregistrer le certificat");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Convertir");

        jButton4.setToolTipText("Lancez la conversion");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("<=Retour");
        jButton5.setToolTipText("Revenir en arrière");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Choisir le certificat à convertir");

        jLabel4.setText("Choisir un certificat de l'autorité intermediare (Optionnel)");

        jLabel6.setText("Choisir le dossier de destination");

        jButton6.setText("Choisir un fichier");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel9.setText("Choisir un certificat de l'autorité racine (Optionnel)");

        jTextField1.setText("Aucun fichier selectionné");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setText("Aucun fichier selectionné");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setText("Aucun fichier selectionné");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setText("Aucun repertoire selectionné");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9)))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextField4))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(31, 31, 31)
                .addComponent(jButton5)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FileFilter filter1 = new FileNameExtensionFilter("pem, crt, cer, der", new String[] { "pem","crt","cer", "der" });
        JFileChooser choisirFichier = new JFileChooser();
        choisirFichier.setFileFilter(filter1);
        choisirFichier.setDialogTitle("Selectionnez un certificat d'autorité intermediaire");
        if (choisirFichier.showOpenDialog(null)==JFileChooser.APPROVE_OPTION){
        File f=choisirFichier.getSelectedFile();
        String chemin= f.getAbsolutePath();
        jTextField2.setText(chemin);} else {
            jTextField2.setText("Aucun fichier selectionné");
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FileFilter filter1 = new FileNameExtensionFilter("pem, crt, cer, der", new String[] { "pem","crt","cer", "der" });
        JFileChooser choisirFichier = new JFileChooser();
        choisirFichier.setFileFilter(filter1);
        choisirFichier.setDialogTitle("Selectionnez un certificat");
        if (choisirFichier.showOpenDialog(null)==JFileChooser.APPROVE_OPTION){
        File f=choisirFichier.getSelectedFile();
        String chemin= f.getAbsolutePath();
        jTextField1.setText(chemin);} else {
        jTextField1.setText("Aucun fichier selectionné");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //Bouton pour enregistrer le nouveau certificat
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    	JFileChooser choisirDossier = new JFileChooser();
        //choisirDossier.setCurrentDirectory(new java.io.File("."));
        choisirDossier.setDialogTitle("Choisissez un dossier pour enregistrer votre nouveau certificat");
        choisirDossier.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (choisirDossier.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
        	String filename = choisirDossier.getSelectedFile().toString();
        	   if (!filename .endsWith(".p7b") &&  !filename .endsWith(".p7c"))
        	        filename += ".p7b";
            jTextField4.setText(filename);
    } else {
      jTextField4.setText("Aucun fichier selectionné");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         
        try {
            ToPKCS();            
        } catch (IOException ex) {
            //Logger.getLogger(Pem_DerToPkcs7.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Renseignez au moins le premier champ et assurez vous que le\n"
                    + " chemin renseingé est accessible!", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
            
            
        }catch (CertificateException |NullPointerException ex) {
            //Logger.getLogger(Pem_DerToPkcs7.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "L'un des certificats selectionnés n'est pas conforme.\n"
                    + "Verifiez le puis essayer de nouveau", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
                      
        }catch (NoSuchProviderException ex) {
            //Logger.getLogger(Pem_DerToPkcs7.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erreur lors de la conversion!", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_jButton4ActionPerformed
       
                
    private void ToPKCS() throws IOException, CertificateException, NoSuchProviderException {
        
        String rootPath=jTextField3.getText();
        String interPath=jTextField2.getText();
        String userPath=jTextField1.getText();
        String enregistre=jTextField4.getText();
        
        Security.addProvider(new BouncyCastleProvider());
        FileInputStream rootCAFile;
        FileInputStream intermedCAFile;
        FileInputStream endUserCertFile;       
        CertificateFactory fact = CertificateFactory.getInstance("X.509","BC");
        CertPath path;
        // create the chain
        if ("Aucun fichier selectionné".equals(rootPath) && "Aucun fichier selectionné".equals(interPath)){
            
            endUserCertFile = new FileInputStream(userPath);
            List chain = Arrays.asList(
            new Certificate[] {
            (X509Certificate)fact.generateCertificate(endUserCertFile)
            });
            // create the CertPath
            path = fact.generateCertPath(chain);
         }
        else if ("Aucun fichier selectionné".equals(rootPath)){
             intermedCAFile = new FileInputStream(interPath);
             endUserCertFile = new FileInputStream(userPath);
             List chain = Arrays.asList(
             new Certificate[] {
             (X509Certificate)fact.generateCertificate(endUserCertFile),
             (X509Certificate)fact.generateCertificate(intermedCAFile)
             });
             // create the CertPath
             path = fact.generateCertPath(chain);  
        }
        else if ("Aucun fichier selectionné".equals(interPath)){
             
             rootCAFile = new FileInputStream(rootPath);
             endUserCertFile = new FileInputStream(userPath);
             List chain = Arrays.asList(
             new Certificate[] {
             (X509Certificate)fact.generateCertificate(endUserCertFile),
             (X509Certificate)fact.generateCertificate(rootCAFile)
             });
             // create the CertPath
             path = fact.generateCertPath(chain);
        }
        else {
                rootCAFile = new FileInputStream(rootPath);
                intermedCAFile = new FileInputStream(interPath);
                endUserCertFile = new FileInputStream(userPath);
                List chain = Arrays.asList(
                new Certificate[] {
                (X509Certificate)fact.generateCertificate(endUserCertFile),
                (X509Certificate)fact.generateCertificate(intermedCAFile),
                (X509Certificate)fact.generateCertificate(rootCAFile)
                });
                // create the CertPath
                path = fact.generateCertPath(chain);
            }  
        // write it out
        try (FileOutputStream fOut = new FileOutputStream(enregistre)) {
            fOut.write(path.getEncoded("PKCS7"));
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Impossible d'enregistrer le nouveau certificat!\n"
                    + "Verifiez que le dossier est accessible.", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }
       
}
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        CertConverter cc = new CertConverter();
        cc.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        FileFilter filter1 = new FileNameExtensionFilter("pem, crt, cer, der", new String[] { "pem","crt","cer", "der" });
        JFileChooser choisirFichier = new JFileChooser();
        choisirFichier.setFileFilter(filter1);
        choisirFichier.setDialogTitle("Selectionnez un certificat d'autorité racine");
        if (choisirFichier.showOpenDialog(null)==JFileChooser.APPROVE_OPTION){
        File f=choisirFichier.getSelectedFile();
        String chemin= f.getAbsolutePath();
        jTextField3.setText(chemin);} else {
            jTextField3.setText("Aucun fichier selectionné");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
            
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pem_DerToPkcs7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

                java.awt.EventQueue.invokeLater(() -> {
            new Pem_DerToPkcs7().setVisible(false);
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
    
}
