package pki.certconverter;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.NoSuchProviderException;
import java.security.Security;
import java.security.cert.*;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * @author hlrrabbi
 */
public class Pem_DerToPkcs7 extends javax.swing.JFrame implements FileChooser{

    /**
     On instancie  Pem_DerToPkcs7 
     */
    public Pem_DerToPkcs7() {
        initComponents();
        Image icon = Toolkit.getDefaultToolkit().getImage("logo_certconvert.png");
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Convert Pem or Der to PKCS#7");
        setLocation(new java.awt.Point(500, 125));

        jLabel1.setFont(new java.awt.Font("Felix Titling", 3, 14)); // NOI18N
        jLabel1.setForeground(java.awt.SystemColor.textHighlight);
        jLabel1.setText("Conversion d'un certificat au format PEM ou DER EN PKCS#7");

        jButton1.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jButton1.setText("Choisir un fichier");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jButton2.setText("Choisir un fichier");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jButton3.setText("Enregistrer le certificat");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 255, 204));
        jButton4.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N

        jButton4.setText("Convertir");

        jButton4.setToolTipText("Lancez la conversion");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 204));
        jButton5.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jButton5.setText("<=Retour");
        jButton5.setToolTipText("Revenir à l'accueil pour choisir un type de conversion");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jLabel2.setText("Choisir le certificat à convertir");

        jLabel4.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jLabel4.setText("Choisir un certificat de l'autorité de certification intermediare (Optionnel)");

        jLabel6.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jLabel6.setText("Choisir le répertoire de destination");

        jButton6.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jButton6.setText("Choisir un fichier");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jLabel9.setText("Choisir un certificat de l'autorité de certification racine (Optionnel)");

        jTextField1.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jTextField1.setText("Aucun fichier selectionné");

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jTextField2.setText("Aucun fichier selectionné");

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Sitka Small", 3, 14)); // NOI18N
        jTextField3.setText("Aucun fichier selectionné");

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("TeX Gyre DejaVu Math", 3, 12)); // NOI18N
        jTextField4.setText("* selectionnez /ou/ entrez  le nom du nouveau certificat *");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9)))
                        .addGap(0, 151, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(290, 290, 290))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     FileFilter filter1;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Importer un certificat
        filter1 = new FileNameExtensionFilter("pem, crt, cer, der", 
                new String[] { "pem","crt","cer", "der" });
        CertChooser(jTextField2, filter1);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Importer un certificat
        filter1 = new FileNameExtensionFilter("pem, crt, cer, der", new String[] { "pem","crt","cer", "der" });
        CertChooser(jTextField1, filter1);        
    }//GEN-LAST:event_jButton1ActionPerformed

    //Bouton pour enregistrer un certificat
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String ext1=".p7b", ext2=".p7c";
        SaveCert(jTextField4, ext1, ext2);        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         
        try {
            ConvertToPKCS();            
        } catch (IOException ex) {
            //Logger.getLogger(Pem_DerToPkcs7.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Renseignez au moins le premier champ et assurez vous que le\n"
                    + " chemin renseingé est accessible!", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);            
        }
        catch (CertificateException | NullPointerException ex) {
            //Logger.getLogger(Pem_DerToPkcs7.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "L'un des certificats selectionnés n'est pas conforme.\n"
                    + "Verifiez le puis essayer de nouveau", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }catch (NoSuchProviderException ex) {
            //Logger.getLogger(Pem_DerToPkcs7.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erreur lors de la conversion!", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
            
        } 
        
    }//GEN-LAST:event_jButton4ActionPerformed
       
                
    private void ConvertToPKCS() throws IOException, CertificateException, NoSuchProviderException {
        
        String rootPath=jTextField3.getText();
        String interPath=jTextField2.getText();
        String userPath=jTextField1.getText();
        String enregistre=jTextField4.getText();
        
        Security.addProvider(new BouncyCastleProvider());
        FileInputStream rootCAFile;
        FileInputStream intermedCAFile;
        FileInputStream endUserCertFile;       
        CertificateFactory fact = CertificateFactory.getInstance("X.509","BC");
        CertPath path;
        // create the chain
        if ("Aucun fichier selectionné".equals(rootPath) && "Aucun fichier selectionné".equals(interPath)){
            
            endUserCertFile = new FileInputStream(userPath);
            List chain = Arrays.asList(
            new Certificate[] {
            (X509Certificate)fact.generateCertificate(endUserCertFile)
            });
            // create the CertPath
            path = fact.generateCertPath(chain);
         }
        else if ("Aucun fichier selectionné".equals(rootPath)){
             intermedCAFile = new FileInputStream(interPath);
             endUserCertFile = new FileInputStream(userPath);
             List chain = Arrays.asList(
             new Certificate[] {
             (X509Certificate)fact.generateCertificate(endUserCertFile),
             (X509Certificate)fact.generateCertificate(intermedCAFile)
             });
             // create the CertPath
             path = fact.generateCertPath(chain);  
        }
        else if ("Aucun fichier selectionné".equals(interPath)){
             
             rootCAFile = new FileInputStream(rootPath);
             endUserCertFile = new FileInputStream(userPath);
             List chain = Arrays.asList(
             new Certificate[] {
             (X509Certificate)fact.generateCertificate(endUserCertFile),
             (X509Certificate)fact.generateCertificate(rootCAFile)
             });
             // create the CertPath
             path = fact.generateCertPath(chain);
        }
        else {
                rootCAFile = new FileInputStream(rootPath);
                intermedCAFile = new FileInputStream(interPath);
                endUserCertFile = new FileInputStream(userPath);
                List chain = Arrays.asList(
                new Certificate[] {
                (X509Certificate)fact.generateCertificate(endUserCertFile),
                (X509Certificate)fact.generateCertificate(intermedCAFile),
                (X509Certificate)fact.generateCertificate(rootCAFile)
                });
                // create the CertPath
                path = fact.generateCertPath(chain);
            }  
        // write it out
        
        try  {
            /*if (!enregistre.endsWith(".p7b") &&  !enregistre.endsWith(".p7c"))
            enregistre += ".p7b";*/
            FileOutputStream fOut = new FileOutputStream(enregistre);
            fOut.write(path.getEncoded("PKCS7"));
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Impossible d'enregistrer le nouveau certificat à l'endroit indiqué!",                     
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }
            File file = new File(enregistre);
            if (file.length() != 0)
            JOptionPane.showMessageDialog(null, "Conversion effectuée avec succès!");     
       
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        CertConverter cc = new CertConverter();
        cc.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        filter1 = new FileNameExtensionFilter("pem, crt, cer, der", new String[] { "pem","crt","cer", "der" });
        CertChooser(jTextField3, filter1);
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
    
}
